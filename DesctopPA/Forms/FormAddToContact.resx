<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAJCQAAAEAIACIFQAAFgAAACgAAAAkAAAASAAAAAEAIAAAAAAAQBQAAMMOAADDDgAAAAAAAAAA
        AADVm1sH1ZtbNtWbW0XVm1tH1ZtbVtWbW2DVm1tf1ZtbXtWbW17Vm1tf1ZtbYtWbW0rVm1s71ZtbOdWb
        WznVm1s51ZtbOtWbW0DVm1tS1ZtbWtWbW1vVm1tc1ZtbW9WbWyDVm1sDAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVm1sx159j1NaeYOLWnV/m1Zxd7tWcXfPVnF3z1Zxd8tWc
        XfLVnF3z1Zxc89adXujWnmDf1p5h3daeYd3WnmHd1p5h3taeYOLVnV7q1Zxd7dWcXe7VnF3v1Zxd79ef
        YtfVm1so1ZtbAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVm1sm1Ztb/9Wb
        W6DVm1uY1ZtbkNWbW3zVm1tx1ZtbcNWbW3DVm1tz1Ztbh9WbW57Vm1up1Ztbq9WbW6vVm1ur1Ztbq9Wb
        W6jVm1uU1ZtbdNWbW2vVm1uC1ZtbzNWbW+fVm1uM1ZtbDgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADVm1tZ1Ztb/9WbW6PVm1s01ZtbGdWbWwrVm1sH1ZtbB9WbWwfVm1sI1ZtbDtWb
        WyPVm1sr1ZtbLNWbWyzVm1ss1ZtbLNWbWyrVm1sb1ZtbCdWbWwbVm1sL1ZtbZ9WbW9LVm1zv1ZtbOdWb
        WwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVm1s81ZtbydWbW9PVm1tV1ZtbAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA1ZtbHdWbW6fVm1v/1Ztbh9WbWwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADVm1sP1ZtbjtWbW//Vm1un1ZtbGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1ZtbA9WbW13Vm1vX1ZtbvdWbWzUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVm1sB1ZtbPtWbW/LVm1vg1ZtbcdWbWwQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANWb
        WybVm1uv1Ztc/9WbW3PVm1sGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1ZtbBtWb
        W3rVm1vk1ZtbsNWbWyYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANWbWwjVm1t51Ztb/9WbW8bVm1s81ZtbAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANWbWz3Vm1v/1ZtbwdWbWzoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANWbWwHVm1sg1ZtbrNWb
        W+LVm1uc1ZtbFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANWbWy3UmlrY1Ztb0dWb
        W0kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADVm1sC1ZtbTdWbW//Vm1vb1ZtbYdWbWwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANWbWxXVm1uU1Ztb4tWbW3bVm1sGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1ZtbCtWbW//Vm1vg1ZtbsdWb
        WyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANWbWwLVm1tm1Ztb/9WbW7PVm1smAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA1ZtbAdWbWzHVm1vA1Ztb4dWbW2vVm1sEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADVm1s31Ztc49WbW+DVm1th1ZtbAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVm1sM1ZtbUtWbWxbVm1v/1Ztb39WbW4vVm1sVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVm1sJ1ZtbhNWbW+vVm1uM1ZtbD9WbWwTVm1sj1ZtbLtWb
        WwYAAAAAAAAAAAAAAAAAAAAA1ZtbBNWbWxvVm1sP1ZtbAgAAAAAAAAAAAAAAAAAAAADVm1tX1Ztb3NWb
        W2fVm1v/1ZtbytWbW5/Vm1siAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1ZtbTNWb
        W//Vm1uq1ZtbK9WbWx/Vm1uF1ZtbudWbW0HVm1sCAAAAAAAAAAAAAAAA1ZtbINWbW33Vm1t+1ZtbJ9Wb
        WwIAAAAAAAAAAAAAAADVm1te1Ztb59WbW3DVm1s+1ZtbvdWbW8XVm1s9AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA1ZtbO9WcXNDVm1ut1ZtbLtWbWxHVm1uS1Ztb6tWbW//Vm1sWAAAAAAAA
        AAAAAAAA1Zp3ZdWbW7bVm1va1ZtbqNWbWyHVm1sBAAAAAAAAAADUmlqu1Zpa89WbW3DVm1sk1Ztb/9Wb
        W9nVm1tTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1ZtbOdWbW73Um1va1ZtbMdWb
        WwLVm1tE1ZtbzNSaWvfVm1tl1ZtbAwAAAAAAAAAA1ZtbCtWbW2HVm1vH1Ztb5tWbW4/Vm1sQ1ZtbG9Wb
        WyPUmm681Ztb79WbW3LVm1sa1Z1f/9WbW97Vm1tXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA1ZtbMNWbW7XVm1v/1ZtbVtWbWwLVm1sI1ZtbhtWbW+rXnVv/1ZtbIgAAAAAAAAAAAAAAANWb
        WwnVmmmQ1Ztb29WbW9fVm1uM1ZtbmtWbW6HVm1z/1Ztb9dWbW4TVm1sQ1Ztbg9WbW+vVm1t81ZtbBgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1ZtbCdWbW3/Vm1vi1Ztbp9WbWx/Vm1sB1ZtbLNWb
        W73Vm1v/1Ztbc9WbWznVm1se1ZtbAwAAAADVm1sP1Jph5NWbW+jVm1vk1Ztb4tWbW9LVm1v/1Ztb+dWb
        W5LVm1sI1ZtbWtWbW//Vm1ua1ZtbHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANWb
        WzPVm1vC1Jpa79WbW4zVm1sP1ZtbBdWbW3fUmlvy1ZtbwNWbW7nVm1uk1ZtbbNWbWxbVm1sD1ZtbPtSa
        WvHVm1vf1ZtbmdWbW0vVm1v/1Ztb7tWbW3TVm1sG1ZtbPtWcXPHVm1vL1ZtbQQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANWbWwjVm1tv1Ztb/9WbW9fVm1t01ZtbCtWbWzPVm1u91Ztb/9Wb
        W8vVm1vi1Ztb49WbW6DVm1sr1ZtbENWbW4zVm1v/1Ztbs9WbWzHVm1v/1Ztb6dWbW2jVm1sB1ZtbFtWb
        W57Vm1vn1ZtbdNWbWwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADVm1sS1ZtbjtWb
        W+DVm1vT1ZtbZtWbWyLVm1uV1Ztb/9WaWqDVm1v/1Ztb/9WbW+TVm1uV1ZtbG9WbWzfVm1vD1Ztb/9Wb
        W23Vm1v/1Ztb0NWbW0cAAAAA1ZtbA9WbW2zVm1v/1ZtbqNWbWx4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADVm1sB1ZtbGdSaW+bVm1vi1ZtbztWbW1bVm1t+1Ztb/9WbW5DVm1se1ZtbctSa
        WvbVm1ub1ZtbItWbWwvVm1t+1Ztb4NWbW//Vm1v/1ZtbyNWbW0QAAAAAAAAAANWbWzrUmlri1Ztb1NWb
        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
        WujUmlro1Jpa6dSaWuzUmlrt1Jpa7tSaWvDUmlru1Jpa7dSaWu3Umlrt1Jpa7dSaWuzUmlrt1Jpa8tWb
        W68AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANWbWwTVm1sy1ZtbhtWb
        W5HVm1uX1Ztbl9WbW5bVm1uS1ZtbhtWbW4LVm1uC1ZtbgNWbW3nVm1tu1ZtbatWbW2rVm1tc1ZtbWdWb
        W1nVm1tZ1ZtbWdWbW1fVm1tR1ZtbWNWbWzIAAAB/8AAAAAAAAD/wAAAAAAAAP/AAAAAAAAAf8AAAAAf/
        /B/wAAAAB//8H/AAAAAD//4P8AAAAIP//gfwAAAAw//+B/AAAADD//8D8AAAAMH//4PwAAAAwf//gfAA
        AADg//8B8AAAAOAPDwHwAAAA8AcHAfAAAADwBwMB8AAAAPADAAHwAAAA8AOAAPAAAADwAEAA8AAAAPgA
        AADwAAAA+AAAAHAAAAD8AAAQcAAAAPwAABgwAAAA/gAAGDAAAAD/AAgYEAAAAP+AGBwQAAAA/4AcPBAA
        AAD/h//+EAAAAP+H//4QAAAA/4f//hAAAAD/g//+EAAAAP+D//4AAAAA/8H/wAAAAAD/wAAAAAAAAP/A
        AAAAAAAA/+AAAAAAAAA=
</value>
  </data>
</root>